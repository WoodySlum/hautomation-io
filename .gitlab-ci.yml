image: node:8.9.1

cache:
  paths:
  - ~/.pkg-cache/

before_script:
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  - mkdir -p ~/.ssh
  - eval $(ssh-agent -s)
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

stages:
  - lint
  - test
  - doc
  - build
  - deploy

test:
  stage: test
  script:
  - apt-get install -y libudev1
  - npm install
  - npm run --verbose test-ci
  coverage: '/Statements   : \d+\.\d+/'

lint:
  stage: lint
  only:
    - master
  script:
  - apt-get install -y libudev1
  - npm install
  - npm run --verbose lint

build:
  stage: build
  script:
  - apt-get install -y libudev1
  - npm install
  - npm run --verbose build
  artifacts:
    paths:
    - build/*

deploy:
  stage: deploy
  only:
    - master
  script:
  - ssh-add <(echo "$STAGING_PRIVATE_KEY")
  - ssh -p22 $STAGING_USER@$STAGING_IP "rm -Rf $STAGING_TMP_FOLDER/hautomation-core-deploy"
  - ssh -p22 $STAGING_USER@$STAGING_IP "mkdir $STAGING_TMP_FOLDER/hautomation-core-deploy"
  - scp -P22 -r build/* pi@$STAGING_IP:$STAGING_TMP_FOLDER/hautomation-core-deploy/
  - ssh -p22 $STAGING_USER@$STAGING_IP "cd $STAGING_TMP_FOLDER/hautomation-core-deploy/scripts && sh install.sh $STAGING_USER $STAGING_GROUP $STAGING_INSTALLATION_FOLDER"
  environment:
    name: staging
    url: $STAGING_URL
