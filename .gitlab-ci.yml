image: woodyslum/hautomation-ci:10.14-1

stages:
  - lint
  - test
  - doc
  - build
  - deploy

cache:
  paths:
    - node_modules/

test:
  stage: test
  except:
  - tags
  script:
  - export NODE_TLS_REJECT_UNAUTHORIZED=0
  - npm config set strict-ssl false
  - rm -Rf package-lock.json
  - npm install
  - npm run --verbose test
  - npm run --verbose cov
  coverage: '/Statements   : \d+\.\d+/'

lint:
  stage: lint
  only:
    - master
  except:
  - tags
  script:
  - export NODE_TLS_REJECT_UNAUTHORIZED=0
  - npm config set strict-ssl false
  - rm -Rf package-lock.json
  - npm install
  - npm run --verbose lint

build:
  stage: build
  script:
  - export NODE_TLS_REJECT_UNAUTHORIZED=0
  - npm config set strict-ssl false
  - rm -Rf package-lock.json
  - npm install
  - echo "{\"commit\":\"$(echo $CI_COMMIT_SHA | head -c8)\"}" > version.json
  - npm run --verbose build-arm
  - npm run --verbose build-deb
  artifacts:
    paths:
    - build/*

deploy:
  stage: deploy
  only:
    - master
  except:
  - tags
  script:
  - eval `ssh-agent -s`
  - ssh-add <(echo "$STAGING_PRIVATE_KEY")
  - ssh -p$STAGING_SSH_PORT $STAGING_USER@$STAGING_IP "rm -Rf $STAGING_TMP_FOLDER/hautomation-core-deploy"
  - ssh -p$STAGING_SSH_PORT $STAGING_USER@$STAGING_IP "mkdir $STAGING_TMP_FOLDER/hautomation-core-deploy"
  - scp -P$STAGING_SSH_PORT -r build/* pi@$STAGING_IP:$STAGING_TMP_FOLDER/hautomation-core-deploy/
  - ssh -p$STAGING_SSH_PORT $STAGING_USER@$STAGING_IP "cd $STAGING_TMP_FOLDER/hautomation-core-deploy/scripts && sh install.sh $STAGING_USER $STAGING_GROUP $STAGING_INSTALLATION_FOLDER"
  environment:
    name: staging
    url: $STAGING_URL
