default:
  image:
    name: woodyslum/smarties-ci:$NODE_VERSION-buster-1

stages:
  - build
  - lint
  - test
  - doc
  - deploy

cache:
  paths:
    - node_modules/

.build_template: &build_definition
  script:
  - export NODE_TLS_REJECT_UNAUTHORIZED=0
  - npm config set strict-ssl false
  - rm -Rf package-lock.json
  - npm install
  - npm rebuild
  - echo "{\"commit\":\"$(echo $CI_COMMIT_SHA | head -c8)\"}" > version.json
  - npm run --verbose build
  - npm run --verbose build-deb



build:amd64:stretch:
  image: woodyslum/smarties-ci:$NODE_VERSION-stretch-1
  stage: build
  only:
  - tags
  tags:
  - ci
  - amd64
  - stretch
  <<: *build_definition
  artifacts:
    paths:
    - build/*.deb

build:amd64:buster:
  image: woodyslum/smarties-ci:$NODE_VERSION-buster-1
  stage: build
  only:
  - tags
  tags:
  - ci
  - amd64
  - buster
  <<: *build_definition
  artifacts:
    paths:
    - build/*.deb

build:armhf:stretch:
  image: woodyslum/smarties-ci:$NODE_VERSION-stretch-1
  stage: build
  only:
  - tags
  tags:
  - ci
  - armhf
  - stretch
  <<: *build_definition
  artifacts:
    paths:
    - build/*.deb

build:armhf:buster:
  stage: build
  tags:
  - ci
  - armhf
  - buster
  <<: *build_definition
  artifacts:
    paths:
    - build/*

test:armhf:
  stage: test
  tags:
  - ci
  - armv7
  - buster
  except:
  - tags
  script:
  - export NODE_TLS_REJECT_UNAUTHORIZED=0
  - npm config set strict-ssl false
  - npm run --verbose cov
  coverage: '/Statements   : \d+\.\d+/'

lint:armhf:
  stage: lint
  tags:
  - ci
  - armv7
  - buster
  only:
    - master
  except:
  - tags
  script:
  - export NODE_TLS_REJECT_UNAUTHORIZED=0
  - npm config set strict-ssl false
  - npm run --verbose lint

deploy:armhf:
  stage: deploy
  tags:
  - ci
  - armv7
  - buster
  only:
    - master
  except:
  - tags
  script:
  - eval `ssh-agent -s`
  - ssh-add <(echo "$STAGING_PRIVATE_KEY" | base64 --decode)
  - ssh -oStrictHostKeyChecking=no -p$STAGING_SSH_PORT $STAGING_USER@$STAGING_IP "rm -Rf $STAGING_TMP_FOLDER/smarties-core-deploy"
  - ssh -oStrictHostKeyChecking=no -p$STAGING_SSH_PORT $STAGING_USER@$STAGING_IP "mkdir $STAGING_TMP_FOLDER/smarties-core-deploy"
  - scp -oStrictHostKeyChecking=no -P$STAGING_SSH_PORT -r build/* pi@$STAGING_IP:$STAGING_TMP_FOLDER/smarties-core-deploy/
  - ssh -oStrictHostKeyChecking=no -p$STAGING_SSH_PORT $STAGING_USER@$STAGING_IP "cd $STAGING_TMP_FOLDER/smarties-core-deploy/scripts && sh install.sh $STAGING_USER $STAGING_GROUP $STAGING_INSTALLATION_FOLDER"
  - ssh -oStrictHostKeyChecking=no -p$STAGING_SSH_PORT $STAGING_USER@$STAGING_IP "sudo shutdown -r +1 'Smarties update'"
  environment:
    name: staging
    url: $STAGING_URL
